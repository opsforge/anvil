version: '2'
services:
  ## CLOUD9 CONTAINERS
  cloud9:
    restart: always
    privileged: true
    command: "-a : "
    image: sapk/cloud9
    expose:
      - 8181
    volumes:
      - ./repos:/workspace
    networks:
      cloud9:
        aliases:
          - web
  cloud9pass:
    restart: always
    environment:
      FORWARD_PORT: 8181
      # Add htpassword here: http://www.htaccesstools.com/htpasswd-generator/ (example below is username=username password=password) - make sure to escape $ signs with $$
      HTPASSWD: 'username:$$apr1$$3X/xufbq$$xBqXarJxuOD0AMXJ4OYin.'
    ports:
      - 8181:80
    image: beevelop/nginx-basic-auth
    networks:
      - cloud9
  concourse-db:
    image: postgres
    environment:
      - POSTGRES_DB=concourse
      - POSTGRES_PASSWORD=Standard1
      - POSTGRES_USER=concourse
      - PGDATA=/database
    volumes:
      - ./concourse-pgdata:/var/lib/postgresql/data
    networks:
      concourse:
        aliases:
          - concourse-db

  concourse:
    image: concourse/concourse
    command: quickstart
    privileged: true
    depends_on:
      - concourse-db
    ports:
      - 8003:8080
    environment:
      - CONCOURSE_POSTGRES_HOST=concourse-db
      - CONCOURSE_POSTGRES_USER=concourse
      - CONCOURSE_POSTGRES_PASSWORD=Standard1
      - CONCOURSE_POSTGRES_DATABASE=concourse
      - CONCOURSE_EXTERNAL_URL='https://localhost:8003'
      - CONCOURSE_BASIC_AUTH_USERNAME=concourse
      - CONCOURSE_BASIC_AUTH_PASSWORD=Standard1
      - CONCOURSE_NO_REALLY_I_DONT_WANT_ANY_AUTH=true
      - CONCOURSE_WORKER_GARDEN_NETWORK
    networks:
      - concourse
  # ELK CONTAINERS
  es:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.1
    expose:
      - 9200
      - 9300
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      es:
        aliases:
          - elasticsearch
  ls:
    restart: always
    image: docker.elastic.co/logstash/logstash:6.0.1
    ports:
      - 5000:5000
    # environment:
    #   - LOG_LEVEL=debug
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - es
  kib:
    restart: always
    image: docker.elastic.co/kibana/kibana:6.0.1
    expose:
      - 5601
    networks:
      es:
        aliases:
          - web
  kibpass:
    restart: always
    environment:
      FORWARD_PORT: 5601
      # Add htpassword here: http://www.htaccesstools.com/htpasswd-generator/ (example below is username=username password=password) - make sure to escape $ signs with $$
      HTPASSWD: 'username:$$apr1$$3X/xufbq$$xBqXarJxuOD0AMXJ4OYin.'
    ports:
      - 5601:80
    image: beevelop/nginx-basic-auth
    networks:
      - es
  ## GUAC
  guacd:
    restart: always
    image: guacamole/guacd
    networks:
      - guac
    expose:
      - 4822
  guacamole:
    depends_on:
      - guacsql
      - guacd
    restart: always
    image: guacamole/guacamole
    environment:
      GUACD_HOSTNAME: 'guacd'
      MYSQL_HOSTNAME: 'guacsql'
      MYSQL_DATABASE: 'guacamole_db'
      MYSQL_USER: 'guac'
      # If you want to change this password, you'll need to change the counterpart in the guacinit.sql file first and re-run DB init (delete the guacsql folder and restart the stack)
      MYSQL_PASSWORD: '7L6gH5WcxyXQdL5189'
    ports:
      - 8002:8080
    networks:
      - guac
  guacsql:
    restart: always
    image: mariadb:10.3
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'true'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      guac:
        aliases:
          - mysql
    volumes:
      - ./guacsql:/var/lib/mysql
      # The belove file is an init sql file that has to be supplied in the folder, otherwise the mysql init will crash
      - ./guacinit.sql:/docker-entrypoint-initdb.d/guacinit.sql
  ## Portainer (swarm)
  portainer:
    image: portainer/portainer
    restart: always
    # >> For SELinux
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data portainer/portainer
    ports:
      - 9000:9000
    network_mode: bridge
  splunk:
    hostname: splunklight
    image: opsforge/splunk-light
    environment:
      SPLUNK_START_ARGS: --accept-license --answer-yes
    volumes:
      - ./splunk-data:/opt/splunk/etc
      - ./splunk-config:/opt/splunk/var
    ports:
      - "8000:8000"
      - "1514:1514/udp"
    networks:
      - splunk
networks:
  guac:
  es:
  jswiki:
  cloud9:
  splunk:
  concourse:
